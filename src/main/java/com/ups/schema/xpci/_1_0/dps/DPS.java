
package com.ups.schema.xpci._1_0.dps;

import java.net.URL;
import javax.xml.namespace.QName;
import jakarta.xml.ws.Service;
import jakarta.xml.ws.WebEndpoint;
import jakarta.xml.ws.WebServiceClient;
import jakarta.xml.ws.WebServiceException;
import jakarta.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 3.0.1
 * Generated source version: 3.0
 * 
 */
@WebServiceClient(name = "DPS", targetNamespace = "http://www.ups.com/schema/xpci/1.0/dps", wsdlLocation = "ws/ups/wsdl/DeniedParty.wsdl")
public class DPS
    extends Service
{

    private final static URL DPS_WSDL_LOCATION;
    private final static WebServiceException DPS_EXCEPTION;
    private final static QName DPS_QNAME = new QName("http://www.ups.com/schema/xpci/1.0/dps", "DPS");

    static {
        DPS_WSDL_LOCATION = com.ups.schema.xpci._1_0.dps.DPS.class.getResource("ws/ups/wsdl/DeniedParty.wsdl");
        WebServiceException e = null;
        if (DPS_WSDL_LOCATION == null) {
            e = new WebServiceException("Cannot find 'ws/ups/wsdl/DeniedParty.wsdl' wsdl. Place the resource correctly in the classpath.");
        }
        DPS_EXCEPTION = e;
    }

    public DPS() {
        super(__getWsdlLocation(), DPS_QNAME);
    }

    public DPS(WebServiceFeature... features) {
        super(__getWsdlLocation(), DPS_QNAME, features);
    }

    public DPS(URL wsdlLocation) {
        super(wsdlLocation, DPS_QNAME);
    }

    public DPS(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, DPS_QNAME, features);
    }

    public DPS(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public DPS(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns DPSRequestPortType
     */
    @WebEndpoint(name = "DPSRequestPortTypePort")
    public DPSRequestPortType getDPSRequestPortTypePort() {
        return super.getPort(new QName("http://www.ups.com/schema/xpci/1.0/dps", "DPSRequestPortTypePort"), DPSRequestPortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link jakarta.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns DPSRequestPortType
     */
    @WebEndpoint(name = "DPSRequestPortTypePort")
    public DPSRequestPortType getDPSRequestPortTypePort(WebServiceFeature... features) {
        return super.getPort(new QName("http://www.ups.com/schema/xpci/1.0/dps", "DPSRequestPortTypePort"), DPSRequestPortType.class, features);
    }

    private static URL __getWsdlLocation() {
        if (DPS_EXCEPTION!= null) {
            throw DPS_EXCEPTION;
        }
        return DPS_WSDL_LOCATION;
    }

}
