
package com.fedex.ws.track.v19;

import java.util.concurrent.Future;
import jakarta.jws.WebMethod;
import jakarta.jws.WebParam;
import jakarta.jws.WebResult;
import jakarta.jws.WebService;
import jakarta.jws.soap.SOAPBinding;
import jakarta.xml.bind.annotation.XmlSeeAlso;
import jakarta.xml.ws.AsyncHandler;
import jakarta.xml.ws.Response;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 3.0.1
 * Generated source version: 3.0
 * 
 */
@WebService(name = "TrackPortType", targetNamespace = "http://fedex.com/ws/track/v19")
@SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
@XmlSeeAlso({
    ObjectFactory.class
})
public interface TrackPortType {


    /**
     * 
     * @param trackRequest
     * @return
     *     returns jakarta.xml.ws.Response<com.fedex.ws.track.v19.TrackReply>
     */
    @WebMethod(operationName = "track", action = "http://fedex.com/ws/track/v19/track")
    public Response<TrackReply> trackAsync(
        @WebParam(name = "TrackRequest", targetNamespace = "http://fedex.com/ws/track/v19", partName = "TrackRequest")
        TrackRequest trackRequest);

    /**
     * 
     * @param trackRequest
     * @param asyncHandler
     * @return
     *     returns java.util.concurrent.Future<? extends java.lang.Object>
     */
    @WebMethod(operationName = "track", action = "http://fedex.com/ws/track/v19/track")
    public Future<?> trackAsync(
        @WebParam(name = "TrackRequest", targetNamespace = "http://fedex.com/ws/track/v19", partName = "TrackRequest")
        TrackRequest trackRequest,
        @WebParam(name = "trackResponse", targetNamespace = "", partName = "asyncHandler")
        AsyncHandler<TrackReply> asyncHandler);

    /**
     * 
     * @param trackRequest
     * @return
     *     returns com.fedex.ws.track.v19.TrackReply
     */
    @WebMethod(action = "http://fedex.com/ws/track/v19/track")
    @WebResult(name = "TrackReply", targetNamespace = "http://fedex.com/ws/track/v19", partName = "TrackReply")
    public TrackReply track(
        @WebParam(name = "TrackRequest", targetNamespace = "http://fedex.com/ws/track/v19", partName = "TrackRequest")
        TrackRequest trackRequest);

    /**
     * 
     * @param getTrackingDocumentsRequest
     * @return
     *     returns jakarta.xml.ws.Response<com.fedex.ws.track.v19.GetTrackingDocumentsReply>
     */
    @WebMethod(operationName = "getTrackingDocuments", action = "http://fedex.com/ws/track/v19/getTrackingDocuments")
    public Response<GetTrackingDocumentsReply> getTrackingDocumentsAsync(
        @WebParam(name = "GetTrackingDocumentsRequest", targetNamespace = "http://fedex.com/ws/track/v19", partName = "GetTrackingDocumentsRequest")
        GetTrackingDocumentsRequest getTrackingDocumentsRequest);

    /**
     * 
     * @param getTrackingDocumentsRequest
     * @param asyncHandler
     * @return
     *     returns java.util.concurrent.Future<? extends java.lang.Object>
     */
    @WebMethod(operationName = "getTrackingDocuments", action = "http://fedex.com/ws/track/v19/getTrackingDocuments")
    public Future<?> getTrackingDocumentsAsync(
        @WebParam(name = "GetTrackingDocumentsRequest", targetNamespace = "http://fedex.com/ws/track/v19", partName = "GetTrackingDocumentsRequest")
        GetTrackingDocumentsRequest getTrackingDocumentsRequest,
        @WebParam(name = "getTrackingDocumentsResponse", targetNamespace = "", partName = "asyncHandler")
        AsyncHandler<GetTrackingDocumentsReply> asyncHandler);

    /**
     * 
     * @param getTrackingDocumentsRequest
     * @return
     *     returns com.fedex.ws.track.v19.GetTrackingDocumentsReply
     */
    @WebMethod(action = "http://fedex.com/ws/track/v19/getTrackingDocuments")
    @WebResult(name = "GetTrackingDocumentsReply", targetNamespace = "http://fedex.com/ws/track/v19", partName = "GetTrackingDocumentsReply")
    public GetTrackingDocumentsReply getTrackingDocuments(
        @WebParam(name = "GetTrackingDocumentsRequest", targetNamespace = "http://fedex.com/ws/track/v19", partName = "GetTrackingDocumentsRequest")
        GetTrackingDocumentsRequest getTrackingDocumentsRequest);

    /**
     * 
     * @param sendNotificationsRequest
     * @return
     *     returns jakarta.xml.ws.Response<com.fedex.ws.track.v19.SendNotificationsReply>
     */
    @WebMethod(operationName = "sendNotifications", action = "http://fedex.com/ws/track/v19/sendNotifications")
    public Response<SendNotificationsReply> sendNotificationsAsync(
        @WebParam(name = "SendNotificationsRequest", targetNamespace = "http://fedex.com/ws/track/v19", partName = "SendNotificationsRequest")
        SendNotificationsRequest sendNotificationsRequest);

    /**
     * 
     * @param sendNotificationsRequest
     * @param asyncHandler
     * @return
     *     returns java.util.concurrent.Future<? extends java.lang.Object>
     */
    @WebMethod(operationName = "sendNotifications", action = "http://fedex.com/ws/track/v19/sendNotifications")
    public Future<?> sendNotificationsAsync(
        @WebParam(name = "SendNotificationsRequest", targetNamespace = "http://fedex.com/ws/track/v19", partName = "SendNotificationsRequest")
        SendNotificationsRequest sendNotificationsRequest,
        @WebParam(name = "sendNotificationsResponse", targetNamespace = "", partName = "asyncHandler")
        AsyncHandler<SendNotificationsReply> asyncHandler);

    /**
     * 
     * @param sendNotificationsRequest
     * @return
     *     returns com.fedex.ws.track.v19.SendNotificationsReply
     */
    @WebMethod(action = "http://fedex.com/ws/track/v19/sendNotifications")
    @WebResult(name = "SendNotificationsReply", targetNamespace = "http://fedex.com/ws/track/v19", partName = "SendNotificationsReply")
    public SendNotificationsReply sendNotifications(
        @WebParam(name = "SendNotificationsRequest", targetNamespace = "http://fedex.com/ws/track/v19", partName = "SendNotificationsRequest")
        SendNotificationsRequest sendNotificationsRequest);

}
